---
name: Release

"on":
  push:
    tags: "v*.*.*"

jobs:
  Linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/v}
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Upgrade packages
        run: |
          pip install --upgrade pip wheel setuptools
          pip install --upgrade wheel setuptools
      - name: Build tarball
        run: python setup.py bdist --formats=gztar --plat-name linux
      - name: Upload tarball
        uses: actions/upload-artifact@v3
        with:
          name: linux-tarball
          path: ./dist/loguru-mypy-${{ steps.tag.outputs.tag }}.linux.tar.gz
          if-no-files-found: error
          retention-days: 1
  GH:
    needs:
      - Linux
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          ref: ${{ github.head_ref }}
          fetch-depth: 0
      - name: Get tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/v}
      - name: Create release directory
        run: mkdir -p release/
      - name: Generator changelog
        id: generate-changelog
        uses: heinrichreimer/action-github-changelog-generator@v2.3
        with:
          token: ${{ secrets.PAT }}
          base: CHANGELOG.md
          onlyLastTag: true
          stripGeneratorNotice: true
          issues: true
          pullRequests: true
          prWoLabels: true
          project: loguru-mypy
          excludeLabels: dependabot,test-requirements,wontfix
          output: release/CHANGELOG.md
      - name: Download Linux tarball
        uses: actions/download-artifact@v3
        with:
          name: linux-tarball
          path: release/
      - name: List release content
        run: ls -ltr release/
      - name: Create GH release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Linux tarball
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/loguru-mypy-${{ steps.tag.outputs.tag }}.linux.tar.gz
          asset_name: loguru-mypy-${{ steps.tag.outputs.tag }}.linux.tar.gz
          asset_content_type: application/gzip
      - name: Upload CHANGELOG.md
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/CHANGELOG.md
          asset_name: CHANGELOG.md
          asset_content_type: text/markdown
      - name: Upload README.md
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: README.md
          asset_name: README.md
          asset_content_type: text/markdown
      - name: Commit changelog
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Release ${{ github.ref }}
          file_pattern: CHANGELOG.md
          push_options: --force
  PyPi:
    needs:
      - GH
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - run: |
          pip install --upgrade pip
          pip install --upgrade setuptools wheel twine
      - name: Build
        run: python setup.py sdist bdist_wheel
      - name: Publish
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          twine upload dist/*
